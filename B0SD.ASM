; 	B0SD.ASM - RK-86 SD card operations

;	 7-sep-1993 - separate module
	.8080

PUBLIC	SD_R,SD_W

;EXTRN	CPM_RECORD,CPM_TRACK,DMA_ADDR	; From BxDISK module

IFNDEF	USE_PRG_DC
SAV_SYS::
	RET
LD_SYS::
	LXI	H,CPM_BIN
	MVI	D,0
	CALL	CmdOpenDelete
	LXI	D,0
IFNDEF	USE_PRG_DC
	LXI	H,4+3
ELSE
	LXI	H,4+(CCP_START-100h)
ENDIF
	MVI	B,0
	CALL	CmdSeekGetSize

	LXI	D,C_BASE
	LXI	H,B_BASE-C_BASE;C_SIZE+D_SIZE
	CALL	CmdRead
	JMP	SD_I01

CPM_BIN:
	DS	64
ELSE
SAV_SYS::
	LXI	H,0
	DAD	SP
	SHLD	STK

	LXI	D,C_BASE
	LXI	H, 0
	JMP	LD_S01

LD_SYS::
	LXI	H,0
	DAD	SP
	SHLD	STK
	LXI	H,C_BASE
	LXI	D,0
LD_S01:	LXI	B, (B_BASE-C_BASE) / 4

	MVI	A,0C1H
	@out	PALM_CNTRL

	XCHG
	SPHL
	XCHG
	INR	B
@02:	REPT	2
	POP	D	; 10
	MOV	M,E	; 7
	INX	H	; 5
	MOV	M,D	; 7
	INX	H	; 5 = 34
	ENDM

	DCR	C	; 5
	JNZ	@02	; 10 = 49 / 2 bytes = 25 or (34 * 2 + 15)/4 = 21
	DCR	B
	JNZ	@02
	LHLD	STK
	SPHL

	MVI	A,0C0H
	@out	PALM_CNTRL
	RET


IF	0
;
;void *memcpy(dest,source,n)
; void *dest,*source; size_t n;
;
memcpy::
@01:
	MOV	A,C	; 5
	ORA	B	; 4
	JZ	@00	; 10
	LDAX	D	; 7
	INX	D	; 5
	MOV	M,A	; 7
	INX	H	; 5
	DCX	B	; 5
	JMP	@01	; 10 = 58
@00:
ENDIF

STK:	DS	2
ENDIF

;------ RAM DISK OPERATIONS -------------
; READ ONE SECTOR FROM RAM DISK
SD_R:	CALL	SD_SEEK
	LHLD	DMA_ADDR
	XCHG
	LXI	h,128
	CALL	CmdRead
SD_ERR_CHECK:
	XRA	A
	RET
	ORA	A
	MVI	A,0
	RZ
	MVI	A,1
	RET

; WRITE ONE SECTOR TO RAM DISK
SD_W:	PUSH	H
	PUSH	D
	PUSH	B
	CALL	SD_SEEK
	LHLD	DMA_ADDR
	XCHG
	LXI	h,128
	CALL	CmdWrite
	POP	B
	POP	D
	POP	H
	XRA	A
	RET
	;JMP	SD_ERR_CHECK

SD_I::
IFNDEF	USE_PRG_DC
	MVI	A,80H
	@out	PALM_CNTRL
	LXI	H,FONT
	MVI	D,0
	CALL	CmdOpenDelete
	LXI	D,0D800H
	LXI	H,2048
	CALL	CmdRead
	MVI	A,0C0h
	@out	PALM_CNTRL
ENDIF

SD_I01:
	LXI	H,FNAME
	PUSH	H
	LXI	D,4
	DAD	D
	LDA	CPM_DISK
	STA	OLDDSK
	ADI	'A'
	MOV	M,A
	POP	H

	MVI	D,0
	CALL	CmdOpenDelete
	;LXI	D,BUF
	;LXI	H,16
	;CALL	CmdRead
	RET

SD_SEEK:
	LDA	OLDDSK
	MOV	B,A
	LDA	CPM_DISK
	CMP	B
	JZ	SD_S01
	CALL	SD_I01
SD_S01:
	LDA	CPM_TRACK
	MOV	L,A
	MVI	H,0
	DAD	H
	DAD	H
	DAD	H
	MOV	D,H
	MOV	E,L
	DAD	H
	DAD	H
	LDA	CPM_DISK
	CPI	2
	JZ	SD_S02
	DAD	D ; hl = trk*1024*5*2/256
	JMP	SD_S03
SD_S02:
	DAD	H
SD_S03:
	MVI	D,0
	MOV	E,H
	MOV	H,L
	MOV	L,D
	;MOV	B,D
	;PUSH	D
	;XCHG
	;LHLD	DATA_ADDR
	;DAD	D
	;POP	D
	XRA	A
	LDA	CPM_RECORD ; A*128->BC
	DCR	A
	RAR
	MOV	B,A
	MVI	A,0
	RAR
	MOV	C,A
	DAD	B
	JNC	@cmp12
	INX	D
@cmp12:
	MVI	B,0
	JMP	CmdSeekGetSize

;BUF:	DS	16
;DATA_ADDR	EQU	BUF+0Ah
FNAME:	DB	'CPM/A.KDI',0
IFNDEF USE_PRG_DC
FONT:	DB	'CPM/8X16ENG.FNT',0
ENDIF

;	END
