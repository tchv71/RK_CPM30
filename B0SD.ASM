; 	B0SD.ASM - RK-86 SD card operations

;	 7-sep-1993 - separate module
	.8080

PUBLIC	SD_R,SD_W

;EXTRN	CPM_RECORD,CPM_TRACK,DMA_ADDR	; From BxDISK module

IFDEF	RK60K
SAV_SYS::
	RET
LD_SYS::
	LXI	H,CPM_BIN
	MVI	D,0
	CALL	CmdOpenDelete
	LXI	D,0
	LXI	H,4+(CCP_START-100h)
	MVI	B,0
	CALL	CmdSeekGetSize

	LXI	D,C_BASE
	LXI	H,B_BASE-C_BASE;C_SIZE+D_SIZE
	CALL	CmdRead
	JMP	SD_I01

CPM_BIN:
	DS	64
ELSE
SAV_SYS::
	LXI	H,0
	DAD	SP
	SHLD	STK

	LXI	D,C_BASE
	LXI	H, 0
	JMP	LD_S01

LD_SYS::
	LXI	H,0
	DAD	SP
	SHLD	STK
	LXI	H,C_BASE
	LXI	D,0
LD_S01:	LXI	B, (B_BASE-C_BASE) / 4

	MVI	A,0C1H
	@out	PALM_CNTRL

	XCHG
	SPHL
	XCHG
	INR	B
@02:	REPT	2
	POP	D	; 10
	MOV	M,E	; 7
	INX	H	; 5
	MOV	M,D	; 7
	INX	H	; 5 = 34
	ENDM

	DCR	C	; 5
	JNZ	@02	; 10 = 49 / 2 bytes = 25 or (34 * 2 + 15)/4 = 21
	DCR	B
	JNZ	@02
	LHLD	STK
	SPHL

	MVI	A,0C0H
	@out	PALM_CNTRL
	RET


IF	0
;
;void *memcpy(dest,source,n)
; void *dest,*source; size_t n;
;
memcpy::
@01:
	MOV	A,C	; 5
	ORA	B	; 4
	JZ	@00	; 10
	LDAX	D	; 7
	INX	D	; 5
	MOV	M,A	; 7
	INX	H	; 5
	DCX	B	; 5
	JMP	@01	; 10 = 58
@00:
ENDIF

ENDIF
STK:	DS	2

;------ RAM DISK OPERATIONS -------------
; READ ONE SECTOR FROM RAM DISK
SD_R:
	JMP	@read
;	CALL	SD_SEEK
;	LHLD	DMA_ADDR
;	XCHG
;	LXI	h,128
;	CALL	CmdRead
;SD_ERR_CHECK:
;	XRA	A
;	RET
;	ORA	A
;	MVI	A,0
;	RZ
;	MVI	A,1
;	RET

; WRITE ONE SECTOR TO RAM DISK
SD_W:
	JMP	@write
;	CALL	SD_SEEK
;	LHLD	DMA_ADDR
;	XCHG
;	LXI	h,128
;	CALL	CmdWrite
;	RET
;	;JMP	SD_ERR_CHECK

SD_I::
	CALL	dblk_i
SD_I01:
	LXI	H,FNAME
	PUSH	H
	LXI	D,4
	DAD	D
	LDA	CPM_DISK
	STA	OLDDSK
	ADI	'A'
	MOV	M,A
	POP	H

	MVI	D,0
	JMP	CmdOpenDelete

;SD_SEEK:
;	LDA	OLDDSK
;	MOV	B,A
;	LDA	CPM_DISK
;	CMP	B
;	JZ	SD_S01
;	CALL	SD_I01
;SD_S01:
;	LDA	CPM_TRACK
;	MOV	L,A
;	MVI	H,0
;	DAD	H
;	DAD	H
;	DAD	H
;	MOV	D,H
;	MOV	E,L
;	DAD	H
;	DAD	H
;	LDA	CPM_DISK
;	CPI	2
;	JZ	SD_S02
;	DAD	D ; hl = trk*1024*5*2/256
;	JMP	SD_S03
;SD_S02:
;	DAD	H
;SD_S03:
;	MVI	D,0
;	MOV	E,H
;	MOV	H,L
;	MOV	L,D
;	;MOV	B,D
;	;PUSH	D
;	;XCHG
;	;LHLD	DATA_ADDR
;	;DAD	D
;	;POP	D
;	XRA	A
;	LDA	CPM_RECORD ; A*128->BC
;	DCR	A
;	RAR
;	MOV	B,A
;	MVI	A,0
;	RAR
;	MOV	C,A
;	DAD	B
;	JNC	@cmp12
;	INX	D
;@cmp12:
;	MVI	B,0
;	JMP	CmdSeekGetSize

LOAD_FONT:
IFNDEF	RK60K
IFDEF USE_PRG_DC
	MVI	A,13
	CALL	SET_PORTS_D8
ENDIF
	MVI	A,80H
	@out	PALM_CNTRL
	LXI	H,FONT
	MVI	D,0
	CALL	CmdOpenDelete
	ORA	A
	JNZ	ERR_READ

	LXI	D,0D800H
	LXI	H,2048
	CALL	CmdRead
	ORA	A
	JNZ	ERR_READ
IFDEF USE_PRG_DC
	MVI	A,10
	CALL	SET_PORTS_D8
ENDIF
	MVI	A,0C0h
	@out	PALM_CNTRL
	RET
ERR_READ:
	@SYSREG	0A0h
	MVI	A,4
	OUT	0E0H
	@SYSREG	80h
	JMP	0E000H
ELSE
	RET
ENDIF

IFDEF	USE_PRG_DC
SET_PORTS_D8:
	LXI	H,SET_PORTS1+1
	LXI	B,8D8H
	MOV	M,C
	PUSH	PSW
	@SYSREG	0A0H
	POP	PSW
	CALL	SET_PORTS1
	@SYSREG	80H
	RET

SET_PORTS1:
	OUT 0
	INR M
	DCR B
	RZ
	JMP SET_PORTS1
ENDIF

FONT:	DB	'CPM/8X16ENG.FNT',0
FNAME:	DB	'CPM/A.KDI',0
;	END
